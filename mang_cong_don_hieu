//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
typedef long long ll;
using namespace std;
int main() {
	int n; cin >> n;
	ll* f = new ll[n + 1];
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
	}
	f[1] = a[1];
	for (int i = 2; i <= n; i++) {
		f[i] = f[i - 1] + a[i];
	}
	for (int i = 1; i <= n; i++)
		cout << f[i] << " ";
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, q;
	cin >> n >> q;
	ll* a = new ll[n + 1];
	ll* f = new ll[n + 1];
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
	}
	f[0] = 0;
	f[1] = a[1];
	for (int i = 2; i <= n; i++) {
		f[i] = f[i - 1] + a[i];
	}
	while (q--) {
		int l, r;
		cin >> l >> r;
		l++;
		r++;
		cout << f[r] - f[l - 1] << endl;
	}
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll a[1005][1005];
ll pre[1005][1005];
int main() {
	ll n, m; cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			cin >> a[i][j];
		}
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			pre[i][j] = pre[i - 1][j] + pre[i][j - 1] - pre[i - 1][j - 1] + a[i][j];
		}
	}
	int q; cin >> q;
	while (q--) {
		int x1, x2, y1, y2;
		cin >> x1 >> x2 >> y1 >> y2;
		ll res = pre[x2][y2] - pre[x1 - 1][y2] - pre[x2][y1 - 1] + pre[x1 - 1][y1 - 1];
		cout << res << endl;
	}
}
*/
//Bai 4
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
	}
	ll* d = new ll[n + 5];
	d[1] = a[1];
	for (int i = 2; i <= n; i++) {
		d[i] = a[i] - a[i - 1];
	}
	for (int i = 1; i <= n; i++)
		cout << d[i] << " ";
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, q; cin >> n >> q;
	ll* a = new ll[n + 1];
	ll* d = new ll[n + 2];
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	d[1] = a[1];
	for (int i = 2; i <= n; i++) {
		d[i] = a[i] - a[i - 1];
	}
	while (q--) {
		int l, r, k;
		cin >> l >> r >> k;
		l++;
		r++;
		d[l] += k;
		d[r + 1] -= k;
	}
	a[1] = d[1];
	for (int i = 2; i <= n; i++) {
		a[i] = a[i - 1] + d[i];
	}
	for (int i = 1; i <= n; i++)
		cout << a[i] << " ";
}
*/
//Bai 6 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, q;
	cin >> n >> q;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	ll* d = new ll[n + 5]; // phan tu o chi so i duoc truy van bao nhieu lan
	for (int i = 0; i <= n + 4; i++)
		d[i] = 0;
	while (q--) {
		int l, r;
		cin >> l >> r;
		d[l] += 1;
		d[r + 1] -= 1;
	}
	for (int i = 1; i <= n; i++) {
		d[i] += d[i - 1];
	}
	sort(d + 1, d + n + 1, greater <ll>());
	sort(a + 1, a + n + 1, greater<ll>());
	//sap xep cac phan tu trong mang a va so lan truy van moi phan tu theo thu tu giam dan
	// de tong lon nhat thi phan tu lon nhat duoc truy van nhieu nhat
	ll sum = 0;
	for (int i = 1; i <= n; i++) {
		sum += a[i] * d[i];
	}
	cout << sum << endl;
}
*/
//Bai 7
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll d[200001];
ll a[200001];
int main() {
	int n, k, q;
	cin >> n >> k >> q;
	for (int i = 1; i <= 200000; i++)
		d[i] = 0;
	while (n--) {
		int l, r;
		cin >> l >> r;
		d[l] += 1;
		d[r + 1] -= 1;
	}
	a[0] = 0;
	for (int i = 1; i <= 200000; i++) {
		a[i] = a[i - 1] + d[i];
	}
	while (q--) {
		int l, r;
		int cnt = 0;
		cin >> l >> r;
		for (int i = l; i <= r; i++) {
			if (a[i] >= k)
				cnt++;
		}
		cout << cnt << endl;
	}
}
*/
//Bai 8 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll a[100001] = { 0 };
ll l[100001] = { 0 };
ll r[100001] = { 0 };
ll val[100001] = { 0 };
ll pre[100001] = { 0 };
ll query[100001] = { 0 };
int main() {
	int n, m, k;
	cin >> n >> m >> k;
	for (int i = 1; i <= n; i++)cin >> a[i];
	for (int i = 1; i <= m; i++) {
		// Thao tac chay tu phan tu l den r
		cin >> l[i] >> r[i] >> val[i];
	}
	// pre[i] : Xet xem moi yeu cau 1, 2 , ... m duoc truy van may lan
	for (int i = 1; i <= k; i++) {
		int x, y;
		cin >> x >> y;
		pre[x]++;
		pre[y + 1]--;
	}
	pre[0] = 0;
	for (int i = 1; i <= m; i++) {
		pre[i] += pre[i - 1];
		query[l[i]] += pre[i] * val[i];
		query[r[i] + 1] -= pre[i] * val[i];
		// dung mang hieu de cong cho cac phan tu tu chi so l den r cho tung yeu cau 1,2,3,..m
	}
	for (int i = 1; i <= n; i++) {
		query[i] += query[i - 1];
		cout << a[i] + query[i] << " ";
	}
}
*/
//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, m; cin >> n >> m;
	ll* a = new ll[n + 2];
	ll* b = new ll[m + 2];
	for (int i = 1; i <= n; i++)cin >> a[i];
	for (int i = 1; i <= m; i++)cin >> b[i];
	ll i = 1, j = 1;
	while (i <= n && j <= m) {
		if (a[i] < b[j]) {
			cout << a[i] << " ";
			i++;
		}
		else {
			cout << b[j] << " ";
			j++;
		}
	}
	while (i <= n) {
		cout << a[i] << " ";
		i++;
	}
	while (j <= m) {
		cout << b[j] << " ";
		j++;
	}
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, m; cin >> n >> m;
	ll* a = new ll[n + 1];
	ll* b = new ll[m + 1];
	for (int i = 1; i <= n; i++)cin >> a[i];
	for (int j = 1; j <= m; j++)cin >> b[j];
	int i = 1, j = 1;
	while (i <= n && j <= m) {
		if (a[i] < b[j])
			i++;
		else {
			cout << i - 1 << " ";
			j++;
		}
	}
	while (j <= m) {
		cout << i - 1 << " ";
		j++;
	}
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	ll n, m; cin >> n >> m;
	ll* a = new ll[n + 1];
	ll* b = new ll[m + 1];
	map<ll, ll>mp1;
	map<ll, ll>mp2;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		mp1[a[i]]++;
	}
	for (int i = 1; i <= m; i++) {
		cin >> b[i];
		mp2[b[i]]++;
	}
	ll i = 1, j = 1;
	ll ans = 0;
	while (i <= n && j <= m) {
		if (a[i] < b[j])
			i++;
		else if (a[i] > b[j])
			j++;
		else {
			ll tmp = i;
			ans += mp1[a[i]] * mp2[b[j]];
			while (a[i] == a[tmp])
				i++;
			while (b[j] == b[tmp])
				j++;
		}
	}
	cout << ans << endl;
}
*/
//Bai 4 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, s;
	cin >> n >> s;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	ll sum = 0;
	ll ans = 0;
	ll cnt = 0;
	ll tmp = 1;
	for (int i = 1; i <= n; i++) {
		sum += a[i];
		if (sum > s) {
			sum -= a[tmp];
			tmp++;
		}
		else
			cnt++;
		ans = max(ans, cnt);
	}
	cout << ans << endl;
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, s; cin >> n >> s;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	ll sum = 0, cnt = 0, res = 1000001, pos = 1;
	int ok = 0;
	for (int i = 1; i <= n; i++) {
		sum += a[i];
		cnt++;
		if(sum >= s) {
			ok = 1;
			while (sum >= s) {
				sum -= a[pos];
				pos++;
				cnt--;
			}
			res = min(res, cnt + 1);
		}
	}
	if (ok == 1)
		cout << res << endl;
	else
		cout << "-1";
}
*/
//Bai 6 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, s;
	cin >> n >> s;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	ll sum = 0;
	ll res = 0;
	ll l = 1;
	for (int r = 1; r <= n; r++) {
		sum += a[r];
		while (sum > s) {
			sum -= a[l];
			l++;
		}
		res += r - l + 1;
	}
	cout << res << endl;
}
*/
//Bai 7 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, s; cin >> n >> s;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	ll sum = 0;
	ll ans = 0;
	ll l = 1;
	for (int i = 1; i <= n; i++) {
		sum += a[i];
		while (sum >= s) {
			ans += n - i + 1;
			sum -= a[l];
			l++;
		}
	}
	cout << ans;
}
*/
//Bai 8 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	int n, k; cin >> n >> k;
	map<int, int>mp;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++)cin >> a[i];
	ll ans = 0;
	int l = 0;
	for (int i = 0; i < n; i++) {
		mp[a[i]]++;
		while (mp.size() > k) {
			mp[a[l]]--;// tang chi so l len 1 vi tri nen tan suat xuat hien cua a[l] giam
			if (mp[a[l]] == 0)//khi tan suat cua a[l] = 0 thi xoa a[l] ra khoi map
				mp.erase(a[l]);
			l++;
		}
		ans += i - l + 1; //mang adbc : cac mang con voi a[l]=a la a ad adb adbc
	}
	cout << ans << endl;
}
*/
//Bai 9
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int l = 0;
	long long ans = 0;
	multiset<int>ms;
	for (int i = 0; i < n; i++) {
		ms.insert(a[i]);
		while (ms.size() > 0 && *ms.rbegin() - *ms.begin() > k) {
			//Khi max-min >k se xoa di phan tu dau tien o trong day con
			auto it = ms.find(a[l]);//tim iterater tro den phan tu can xoa
			ms.erase(it);
			l++;
		}
		ans += i - l + 1;
	}
	cout << ans << endl;
}
*/
//Bai 10
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++)cin >> a[i];
	sort(a, a + n);
	ll l = 0, r = n - 1;
	while (l < r) {
		if (a[l] + a[r] == k) {
			cout << "YES" << endl;
			return 0;
		}
		else if (a[l] + a[r] < k)
			l++;
		else
			r--;
	}
	cout << "NO" << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
#include<vector>
using namespace std;
typedef long long ll;
int main() {
	ll n, k;
	cin >> n >> k;
	map<ll, ll>mp;
	ll* a = new ll[n + 1];
	vector<ll>v;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		if (mp[a[i]] == 0)
			v.push_back(a[i]);
		mp[a[i]]++;
	}
	for (ll x : v) {
		if (mp[k - x] != 0 && ( k - x)*2 != k) {
			cout << "YES" << endl;
			return 0;
		}
		else if ((k - x) * 2 == k && mp[k - x] > 1) {
			cout<<"YES"<<endl;
				return 0;
		}
	}
	cout << "NO" << endl;
}
*/
//Bai 11
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll k; cin >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	for (int i = 0; i < n; i++) {
		ll sum = k - a[i];
		int l = i + 1;
		int r = n - 1;
		while (l < r) {
			if (a[l] + a[r] == sum) {
				cout << "YES" << endl;
				return 0;
			}
			else if (a[l] + a[r] < sum)
				l++;
			else
				r--;
		}
	}
	cout << "NO" << endl;
}
*/
//Bai 12 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll k; cin >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	for (int i = 0; i <= n - 3; i++) {
		for (int j = i + 1; j <= n - 2; j++) {
			ll sum = k - a[i] - a[j];
			int l = j + 1;
			int r = n - 1;
			while (l < r) {
				if (a[l] + a[r] == sum) {
					cout << "YES" << endl;
					return 0;
				}
				else if (a[l] + a[r] < sum)
					l++;
				else
					r--;
			}
		}
	}
	cout << "NO" << endl;
}
*/
//Bai 13 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<string>
using namespace std;
int main() {
	string s; cin >> s;
	int x, y;
	cin >> x >> y;
	int cnt2 = 0, cnt8 = 0;
	int ans = 0;
	int l = 0;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] == '2')cnt2++;
		else cnt8++;
		while (cnt2 > x || cnt8 > y) {
			if (s[l] == '2')
				cnt2--;
			else
				cnt8--;
			l++;
		}
		ans = max(ans, cnt2 + cnt8);
	}
	cout << ans << endl;
}
*/
//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	ll sum = 0;
	for (int i = 0; i < k; i++)
		sum += a[i];
	ll ans = sum;
	ll pos = 0; // neu pos k duoc cap nhat thi ans = a[0] + ... a[k - 1]
	for (int i = 0; i < n - k; i++) {
		sum -= a[i];
		sum += a[i + k];
		// day con bat dau tu i + 1 den i + k
		if (ans < sum) {
			ans = sum;
			pos = i + 1;
		}
	}
	cout << ans << endl;
	for (ll i = pos; i < pos + k; i++)
		cout << a[i] << " ";
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	multiset<ll>ms;
	int l = 0;
	for (int i = 0; i < k; i++) {
		ms.insert(a[i]);
	}
	cout << *ms.begin() << " " << *ms.rbegin() << endl;
	for (int i = k; i < n; i++) {
		auto it = ms.find(a[l]);
		ms.erase(it);
		l++;
		ms.insert(a[i]);
		cout << *ms.begin() << " " << *ms.rbegin() << endl;
	}
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n];
	for (int i = 0; i < n; i++) cin >> a[i];
	multiset<int>s;
	for (int i = 0; i < k; i++) {
		s.insert(a[i]);
	}
	auto it = next(s.begin(), (k - 1) / 2);
	for (int i = k; i < n; i++) {
		cout << *it << " ";
		s.insert(a[i]);
		if (a[i] < *it)it--;
		if (a[i - k] <= *it)it++;
		s.erase(s.lower_bound(a[i - k]));
	}
	cout << *it << " ";
	return 0;
}
*/
//Bai 4
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
#include<string>
using namespace std;
int main() {
	string s; cin >> s;
	map<char, int>mp1;
	for (char x : s) mp1[x]++;
	map<char, int>mp2;
	int res = 10000000;
	int cnt = 0;
	int l = 0;
	for (int i = 0; i < s.size(); i++) {
		if (mp2.size() < mp1.size()) {
			mp2[s[i]]++;
			cnt++;
		}
		while (mp2.size() == mp1.size()) {
			res = min(res, cnt);
			mp2[s[l]]--;
			if (mp2[s[l]] == 0) {
				auto it = mp2.find(s[l]);
				mp2.erase(it);
			}
			l++;
			cnt--;
		}
	}
	cout << res << endl;
}
*/
//Bai 5 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
int main() {
	string s; cin >> s;
	map<char, int>mp;
	int l = 0;
	int ans = 0;
	for (int i = 0; i < s.size(); i++) {
		mp[s[i]]++;
		while (mp[s[i]] > 1) {
			mp[s[l++]]--;
		}
		ans = max(ans, i - l + 1);
	}
	cout << ans << endl;
}
*/
//Bai 6 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<string>
#include<map>
using namespace std;
int main() {
	string s, t; cin >> s >> t;
	int dem1[256] = { 0 };
	int dem2[256] = { 0 };
	for (char x : t)
		dem2[x]++;
	int ans = 1000001, l = 0, index = -1, cnt = 0;
	for (int i = 0; i < s.size(); i++) {
		dem1[s[i]]++;
		if (dem1[s[i]] <= dem2[s[i]])
			cnt++;
		if (cnt == t.size()) {
			while (dem1[s[l]] > dem2[s[l]] ) {
				dem1[s[l]]--;
				l++;
			}
			if (ans > i - l + 1) {
				ans = i - l + 1;
				index = l;
			}
		}
	}
	if (index == -1)
		cout << "-1" << endl;
	else
		cout << s.substr(index, ans) << endl;
}
*/
//Bai 7
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	ll sum = 0, l = 0, ans = 10000001, pos = -1;
	for (int i = 0; i < n; i++) {
		sum += a[i];
		if (sum >= k) {
			while (sum >= k) {
				sum -= a[l];
				l++;
			}
			// sum - a[l] cuoi cung < k nen day thoa man phai chua ca a[l]
			if (ans > i - l + 1) {
				pos =  l - 1;
				ans = i - l + 1;
			}
		}
	}
	if (pos == -1)
		cout << "-1" << endl;
	else {
		for (int i = pos; i <= pos + ans; i++) {
			cout << a[i] << " ";
		}
	}
}
*/
//Bai 8
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	map<int, int>mp;
	for (int i = 0; i < n; i++) cin >> a[i];
	for (int i = 0; i < k; i++) {
		mp[a[i]]++;
		if (mp[a[i]] == 2) {
			cout << "YES" << endl;
			return 0;
		}
	}
	int l = 0;
	for (int i = k; i < n; i++) {
		mp[a[l]]--;
		l++;
		mp[a[i]]++;
		if (mp[a[i]] == 2) {
			cout << "YES" << endl;
			return 0;
		}
	}
	cout << "NO" << endl;
}
*/
//Bai 9
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	int sum = 0;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		sum += a[i];
	}
	if (sum < k) {
		cout << "-1" << endl;
		return 0;
	}
	sum = 0;
	int l = 0, ans = 0;
	for (int i = 0; i < k; i++) {
		sum += a[i];
	}
	ans = max(sum, ans);
	for (int i = k; i < n; i++) {
		sum -= a[l];
		l++;
		sum += a[i];
		ans = max(sum, ans);
	}
	cout << k - ans << endl;
}
*/
