//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
#include<string>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	stack<int>st;
	vector<int>v;
	while (n--) {
		string s; cin >> s;
		if (s == "show") {
			if (v.size() == 0)
				cout << "EMPTY" << endl;
			else {
				for (int i = 0; i < v.size(); i++)
					cout << v[i] << " ";
				cout << endl;
			}
		}
		else if (s == "pop") {
			if (v.size() > 0)
				v.pop_back();
		}
		else {
			int i; cin >> i;
			v.push_back(i);
		}
	}
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
#include<string>
using namespace std;
int main() {
	int n; cin >> n;
	stack<int>st;
	while (n--) {
		string s; cin >> s;
		if (s == "pop") {
			if (!st.empty()) {
				st.pop();
			}
		}
		else if (s == "top") {
			if (st.empty())
				cout << "NONE" << endl;
			else
				cout << st.top() << endl;
		}
		else {
			int x; cin >> x;
			st.push(x);
		}
	}
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<char>st1;
	stack<char>st2;
	stack<char>st3;
	for (char x : s) {
		if (x == '(')
			st1.push(x);
		else if (x == '{')
			st2.push(x);
		else if (x == '[')
			st3.push(x);
		else if(x==')')
			if (st1.empty()) {
				cout << "NO" << endl;
				return 0;
			}
			else 
				st1.pop();
		else if (x == '}') {
			if (st2.empty()) {
				cout << "NO" << endl;
				return 0;
			}
			else
				st2.pop();
		}
		else {
			if (st3.empty()) {
				cout << "NO" << endl;
				return 0;
			}
			else
				st3.pop();
		}
	}
	if (st1.empty() && st2.empty() && st3.empty()) cout << "YES" << endl;
	else cout << "NO" << endl;
}
*/
//Bai 4 )))((( -> 6
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<char>st;
	int cnt = 0;
	for (char x : s) {
		if (x == '(') {
			st.push(x);
		}
		else {
			if (!st.empty())
				st.pop();
			else
				cnt++;
		}
	}
	cout << st.size() + cnt;
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<char>st;
	for (char x : s) {
		if (st.empty()) {
			st.push(x);
		}
		else {
			if (x == st.top())
				st.pop();
			else
				st.push(x);
		}
	}
	string tmp = "";
	if (st.empty())
		cout << "EMPTY";
	else {
		while (!st.empty()) {
			tmp += st.top();
			st.pop();
		}
		reverse(tmp.begin(), tmp.end());
		cout << tmp << endl;
	}
}
*/
//Bai 6
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	int k; cin >> k;
	stack<char>st;
	int tmp = 0;
	for (char x : s) {
		if (st.size() < k - 1) {
			if (st.size() > 0) {
				if (st.top() == x)
					tmp++;
				else
					tmp = 1;
			}
			else {
				tmp = 1;
			}
			st.push(x);	
		}
		else {
			if (x == st.top() && tmp == k - 1) {
				while (tmp > 0) {
					st.pop();
					tmp--;
				}
				tmp = 1;
			}
			else if (x == st.top()) {
				tmp++;
				st.push(x);
			}
			else {
				st.push(x);
				tmp = 1;
			}
		}
	}
	if (st.empty()) {
		cout << "EMPTY" << endl;
		return 0;
	}
	string res;
	while (!st.empty()) {
		res += st.top();
		st.pop();
	}
	reverse(res.begin(), res.end());
	cout << res << endl;
}
*/
//Bai 7
/*
//Trong cap () phai ton tai 1 dau + - * / thi moi k thua
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
stack<int>st;
bool check(string s) {
	for (char x : s) {
		if (x != ')')
			st.push(x);
		else {
			bool thua = 1;
			while (st.top() != '(') {
				char tmp = st.top();
				if (tmp == '+' || tmp == '-' || tmp == '*' || tmp == '/')
					thua = 0;
				st.pop();
			}
			st.pop();
			if (thua == 1) return 1;
		}
	}
	return 0;
}
int main() {
	string s; cin >> s;
	if (check(s))
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
}
*/
//Bai 8
/*
//))))((((
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	int cnt = 0;
	stack<char>st;
	for (char x : s) {
		if (x == '(') st.push('(');
		else {
			if (!st.empty())
				st.pop();
			else {
				st.push('(');
				cnt++;
			}
		}
	}
	cout << st.size() / 2 + cnt;
}
*/
//Bai 9
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
#include<string>
using namespace std;
int main() {
	string s; cin >> s;
	stack<string>st;
	for (int i = s.size() - 1; i >= 0; i--) {
		if (isalpha(s[i])) {
			st.push(string(1, s[i]));
		}
		else {
			string o1 = st.top(); st.pop();
			string o2 = st.top(); st.pop();
			string tmp = "(" + o1 + s[i] + o2 + ")";
			st.push(tmp);
		}
	}
	cout << st.top();
}
*/
//Bai 10
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<string>st;
	for (int i = s.size() - 1; i >= 0; i--) {
		if (isalpha(s[i]))
			st.push(string(1, s[i]));
		else {
			string o1 = st.top(); st.pop();
			string o2 = st.top(); st.pop();
			string tmp = o1 + o2 + s[i];
			st.push(tmp);
		}
	}
	cout << st.top() << endl;
}
*/
//Bai 11
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int uutien(char c) {
	if (c == '^') return 3;
	else if (c == '*' || c == '/') return 2;
	else if (c == '+' || c == '-') return 1;
	else
		return 0;
}
int main() {
	string s; cin >> s;
	stack<char>st; // luu cac toan tu
	string res = "";
	for (int i = 0; i < s.size(); i++) {
		if (isalpha(s[i])) {
			res += s[i];
		}
		else if (s[i] == '(')
			st.push(s[i]);
		else if (s[i] == ')') {
			while (!st.empty() && st.top() != '(') {
				res += st.top(); st.pop();
			}
			//Xoa "("
			st.pop();
		}
		//Them cac toan tu o dau ngan xep neu thu tu uu tien cua no
		// >= thu tu uu tien cua toan tu dang xet
		else {
			while (!st.empty() && uutien(st.top()) >= uutien(s[i])) {
				res += st.top(); st.pop();
			}
			st.push(s[i]);
		}
	}
	while (!st.empty()) {
		res += st.top();
		st.pop();
	}
	cout << res << endl;
}
*/
//Trung to - Tien to : chua sub
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int uutien(char c) {
	if (c == '^') return 3;
	else if (c == '*' || c == '/') return 2;
	else if (c == '+' || c == '-') return 1;
	else
		return 0;
}
int main() {
	string s; cin >> s;
	reverse(s.begin(), s.end());
	string res = "";
	string tmp = "";
	stack<char>st;
	for (char x : s) {
		if (isalpha(x))
			res += x;
		else if (x == ')') {
			st.push(')');
		}
		else if (x == '(') {
			while (!st.empty() && st.top() != ')') {
				res += st.top();
				st.pop();
			}
			st.pop();
		}
		else {
			while (!st.empty() && uutien(st.top()) >= uutien(x)) {
				res += st.top();
				st.pop();
			}
			st.push(x);
		}
	}
	while (!st.empty()) {
		res += st.top();
		st.pop();
	}
	reverse(res.begin(), res.end());
	cout << res << endl;
}
*/
//Bai 12
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<string>st;
	for (char x : s) {
		if (isalpha(x)) {
			st.push(string(1, x));
		}
		else {
			string top1 = st.top();
			st.pop();
			string top2 = st.top();
			st.pop();
			string tmp = x + top2 + top1;
			st.push(tmp);
		}
	}
	cout << st.top() << endl;
}
*/
//Bai 13
/*
#include<iostream>
#include<algorithm>
#include<math.h>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<string>st;
	for (char x : s) {
		if (isalpha(x))
			st.push(string(1, x));
		else {
			string top1 = st.top();
			st.pop();
			string top2 = st.top();
			st.pop();
			string tmp = '(' + top2 + x + top1 + ")";
			st.push(tmp);
		}
	}
	cout << st.top() << endl;
}
*/
//Bai 14
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<int>st;
	for (int i = s.size() - 1; i >= 0; i--) {
		if (isdigit(s[i])) {
			st.push(s[i] - '0');
		}
		else {
			int o1 = st.top(); st.pop();
			int o2 = st.top(); st.pop();
			if (s[i] == '+') st.push(o1 + o2);
			else if (s[i] == '-') st.push(o1 - o2);
			else if (s[i] == '*') st.push(o1 * o2);
			else st.push(o1 / o2);
		}
	}
	cout << st.top();
}
*/
//Bai 15
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string s; cin >> s;
	stack<int>st;
	for (char x : s) {
		if (isdigit(x)) {
			st.push(x - '0');
		}
		else {
			int t1 = st.top(); st.pop();
			int t2 = st.top(); st.pop();
			if (x == '+') st.push(t1 + t2);
			else if (x == '-') st.push(t2 - t1);
			else if (x == '*') st.push(t1 * t2);
			else st.push(t2 / t1);
		}
	}
	cout << st.top();
}
*/
//Bai 16 : trinh bien dich khong ho tro
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int main() {
	string x;
	stack<string>st;
	while (cin >> x) {
		st.push(x);
	}
	while (!st.empty()) {
		cout << st.top() << " ";
		st.pop();
	}
}
*/
//Bai 17
/*
#include<iostream>
#include<algorithm>
#include<math.h>
#include<stack>
int a[1000005];
using namespace std;
int main() {
	int n; cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
	}
	for (int j = 1; j <= n; j++) {
		int check = 0;
		for (int i = j + 1; i <= n; i++) {
			if (a[i] > a[j]) {
				cout << a[i] << " ";
				check = 1;
				break;
			}
		}
		if (check == 0) cout << "-1" << " ";
	}
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int a[1000005];
int b[1000005];
int main() {
	int n; cin >> n;
	for (int i = 0; i < n; i++)cin >> a[i];
	stack<int>st;
	for (int i = n - 1; i >= 0; i--) {
		while (st.size() > 0 && st.top() <= a[i])
			st.pop();
		if (st.empty())
			b[i] = -1;
		else
			b[i] = st.top();
		st.push(a[i]);
	}
	for (int i = 0; i < n; i++) cout << b[i] << " ";
}
*/
//Bai 18
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int a[1000005];
int b[1000005]; // Luu chi so cua phan tu lon hon dau tien ben phai cua a[i]
int c[1000005]; // Luu gia tri cua phan tu nho ben phai cua a[i]
int main() {
	stack<int>st;
	int n; cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for (int i = n - 1; i >= 0; i--) {
		while (st.size() > 0 && a[i] >= a[st.top()])
			st.pop();
		if (st.empty())
			b[i] = -1;
		else 
			b[i] = st.top();
		st.push(i);
	}
	while (!st.empty())
		st.pop();
	for (int i = n - 1; i >= 0; i--) {
		while (st.size() > 0 && a[i] <= st.top()) {
			st.pop();
		}
		if (st.empty())
			c[i] = -1;
		else
			c[i] = st.top();
		st.push(a[i]);
	}
	for (int i = 0; i < n; i++) {
		if (b[i] == -1)
			cout << "-1" << " ";
		else {
			cout << c[b[i]] << " "; 
			// gia tri nho hon a[i] gan nhat ben phai sau chi so b[i] tim duoc
		}
	}
}
*/
//Bai 19
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
stack<int>st;
typedef long long ll;
ll a[1000005];
int main() {
	int n; cin >> n;
	for (int i = 0; i < n; i++) cin >> a[i];
	ll res = 0, i = 0;
	while (i < n) {
		if (st.empty() || a[i] > a[st.top()]) {
			st.push(i);
			i++;
		}
		else {
			int j = st.top();
			st.pop();
			if (st.empty()) {
				res = max(res, a[j] * i);
			}
			else {
				res = max(res, a[j] * (i - st.top() - 1));
			}
		}
	}
	while (st.size()) {
		int j = st.top();
		st.pop();
		if (st.empty())
			res = max(res, a[j] * n);
		else
			res = max(res, a[j] * (n - st.top() - 1));
	}
}
*/
//Bai 20
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<stack>
using namespace std;
int a[505][505], b[505][505];
stack<int>st;
int calc(int a[], int n) {//Xet theo hang
	int i = 0, res = 0;
	while (i < n) {
		if (st.empty() || a[i] >= a[st.top()]) {
			st.push(i);
			i++;
		}
		else {
			int j = st.top();
			st.pop();
			if (st.empty()) {
				res = max(res, a[j] * i);
			}
			else {
				res = max(res, a[j] * (i - st.top() - 1));
			}
		}
	}
	while (st.size()) {
		int j = st.top();
		st.pop();
		if (st.empty()) {
			res = max(res, a[j] * n);
		}
		else {
			res = max(res, a[j] * (n - st.top() - 1));
		}
	}
	return res;
}
int main() {
	int n, m; cin >> n >> m;
	//b[i][j] : la tong so 1 lien tiep tren cot j tinh den hang i
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) cin >> a[i][j];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (i == 0) b[i][j] = a[i][j];
			else if (a[i][j] == 1) {
				b[i][j] = b[i - 1][j] + 1;
			}
			else
				b[i][j] = a[i][j];
		}
	}
	int ans = 0;
	for (int i = 0; i < n; i++) {
		ans = max(ans, calc(b[i], m));
	}
	cout << ans << endl;
}
*/

//<---------Hang Doi--------->
//Tim duong di ngan nhat bien doi tu a sang b
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<unordered_set>
#include<queue>
using namespace std;
typedef pair<int, int>ii;
unordered_set<int> se; // luu dinh duyet qua
bool visited(int u) {
	auto it = se.find(u);
	if (it == se.end()) return false;
	else
		return true;
}
int bfs(int s, int t) {
	queue<ii>q;
	q.push({ s,0 });
	se.insert(s);
	while (!q.empty()) {
		ii top = q.front(); q.pop();
		if (top.first == t) return top.second;
		if (top.first * 2 == t || top.first - 1 == t) return top.second + 1;
		if (!visited(top.first * 2) && top.first < t) {
			q.push({ top.first * 2, top.second + 1 });
			se.insert(top.first * 2);
		}
		if (!visited(top.first - 1) && top.first >= 1) {
			q.push({ top.first - 1,top.second + 1 });
			se.insert(top.first - 1);
		}
	}
}
int main() {
	int s, t;
	cin >> s >> t;
	cout << bfs(s, t);
}
*/
//Sinh ra cac sp tu cac chu so cho truoc
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<queue>
using namespace std;
typedef long long ll;
void solve(int n) {
	queue<ll>q;
	vector<ll>res;
	q.push(6); q.push(8);
	while (true) {
		int u = q.front(); q.pop();
		res.push_back(u);
		if (res.size() == n) break;
		q.push(u * 10 + 6);
		q.push(u * 10 + 8);
	}
	for (ll i : res) cout << i << " ";
}
int main() {
	int n; cin >> n;
	solve(n);
}
*/
//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	queue<int>q;
	int tmp = -1e9 + 7;
	while (n--) {
		int x; cin >> x;
		if (x == 1)
			cout << q.size() << endl;
		else if (x == 2) {
			if (q.empty()) cout << "YES" << endl;
			else cout << "NO" << endl;
		}
		else if (x == 3) {
			int y; cin >> y;
			q.push(y);
			tmp = y;
		}
		else if (x == 4) {
			if (!q.empty())
				q.pop();
		}
		else if(x == 5) {
			if (!q.empty())
				cout << q.front() << endl;
			else
				cout << "-1" << endl;
		}
		else {
			if (q.empty()) cout << "-1" << endl;
			else cout << tmp << endl;
		}
	}
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
using namespace std;
int main() {
	int n; cin >> n;
	queue<int>q;
	while (n--) {
		string s; cin >> s;
		if (s == "PUSH") {
			int x; cin >> x;
			q.push(x);
		}
		else if (s == "POP") {
			if (!q.empty())
				q.pop();
		}
		else {
			if (!q.empty())
				cout << q.front() << endl;
			else
				cout << "NONE" << endl;
		}
	}
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
using namespace std;
int a[1000005];
int main() {
	int n; cin >> n;
	int cnt = -1;
	while (n--) {
		string x; cin >> x;
		//Them phan tu vao dau hang doi
		if (x == "PUSHFRONT") {
			int y; cin >> y;
			cnt++;
			for (int i = cnt; i > 0; i--) {
				a[i] = a[i - 1];
			}
			a[0] = y;
		}
		//Them vao cuoi
		else if (x == "PUSHBACK") {
			int y; cin >> y;
			cnt++;
			a[cnt] = y;
		}
		//Xoa phan tu o dau hang doi
		else if (x == "POPFRONT") {
			if (cnt >= 0) {
				for (int i = 0; i < cnt; i++) {
					a[i] = a[i + 1];
				}
				cnt--;
			}	
		}
		//Xoa phan tu o cuoi hang doi
		else if (x == "POPBACK") {
			if (cnt >= 0)
				cnt--;
		}
		//In ra phan tu o dau hang doi
		else if (x == "PRINTFRONT") {
			if (cnt >= 0)
				cout << a[0] << endl;
			else
				cout << "NONE" << endl;
			
		}
		//In ra phan tu o cuoi hang doi
		else {
			if (cnt >= 0)
				cout << a[cnt] << endl;
			else
				cout << "NONE" << endl;
		}
	}
}
*/
//Bai 4
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	queue<string>q;
	vector<string>v;
	q.push("0");
	q.push("1");
	while (true) {
		if (v.size() == n)
			break;
		string x = q.front();
		if (x[0] != '0')
			v.push_back(x);
		q.pop();
		string tmp1 = x + "0";
		string tmp2 = x + "1";
		q.push(tmp1);
		q.push(tmp2);
	}
	for (string i : v) cout << i << ' ';
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<string>
using namespace std;
typedef long long ll;
ll res[205];
string ans[10000000];
int main() {
	queue<string>q;
	q.push("0");
	q.push("8");
	int cnt = 0;
	while (true) {
		string s = q.front();
		q.pop();
		if (cnt == 280005) break;
		if (s[0] != '0') {
			ans[cnt] = s;
			cnt++;
		}
		q.push(s + "0");
		q.push(s + "8");
	}
	for (int i = 0; i <= 280000; i++) {
		ll tmp = stoll(ans[i]);
		for (int j = 1; j <= 200; j++) {
			if (tmp % j == 0 && res[j] == 0)
				res[j] = tmp;
		}
	}
	int n; cin >> n;
	while (n--) {
		int x; cin >> x;
		cout << res[x] << endl;
	}
}
*/
//Bai 6
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<string>
using namespace std;
typedef long long ll;
vector<ll>v;
int main() {
	queue<string>q;
	q.push("0");
	q.push("1");
	while (true) {
		string s = q.front(); q.pop();
		if (v.size() >= 300000) break;
		if (s[0] != '0')
			v.push_back(stoll(s));
		q.push(s + "0");
		q.push(s + "1");
	}
	int n; cin >> n;
	while (n--) {
		ll x; cin >> x;
		int cnt = 0;
		for (int i = 0; i < v.size();i++) {
			if (v[i] < x) {
				cnt++; 
			}
			else break;
		}
		cout << cnt << endl;
	}
}
*/
//Bai 7
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
using namespace std;
typedef long long ll;
ll res[501];
vector<string>v;
int main() {
	queue<string>q;
	q.push("1");
	v.push_back("1");
	while (true) {
		string s = q.front(); q.pop();
		if (s.size()==19) break;
		v.push_back(s + "0");
		v.push_back(s + "1");
		q.push(s + "0");
		q.push(s + "1");
	}
	for (int j = 1; j <= 500; j++) {
		for (string i : v) {
			if (stoll(i) % j == 0 && res[j] == 0) {
				res[j] = stoll(i);
				break;
			}
		}
	}
    int n; cin >> n;
    while (n--) {
        int x; cin >> x;
        cout << res[x] << endl;
    }
}
*/
//Bai 8
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
using namespace std;
typedef long long ll;
void init(int n) {
	vector<string>v;
	queue<string>q;
	vector<string>res;
	q.push("6");
	q.push("8");
	v.push_back("6");
	v.push_back("8");
	while (true) {
		string top = q.front(); q.pop();
		if (top.size() >= n) break;
		else {
			v.push_back(top + "6");
			v.push_back(top + "8");
		}
		q.push(top + "6");
		q.push(top + "8");
	}
	reverse(v.begin(), v.end());
	for (string i : v) cout << i << " ";
	cout << endl;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		init(n);
	}
}
*/
//Bai 9
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
using namespace std;
typedef long long ll;
void init(int n) {
	queue<string>q;
	vector<string>v;
	q.push("6");
	q.push("8");
	v.push_back("6");
	v.push_back("8");
	while (true) {
		string top = q.front(); q.pop();
		if (top.size() >= n) break;
		v.push_back(top + "6");
		v.push_back(top + "8");
		q.push(top + "6");
		q.push(top + "8");
	}
	cout << v.size() << endl;
	for (string i : v) cout << i << " ";
	cout << endl;
}
int main() {
	int q; cin >> q;
	while (q--) {
		int n; cin >> n;
		init(n);
	}
}
*/
//Bai 10
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<string>
#include<vector>
#include<queue>
using namespace std;
void init(int n) {
	queue<string>q;
	vector<string>v;
	q.push("6");
	q.push("8");
	v.push_back("6");
	v.push_back("8");
	while (true) {
		string top = q.front(); q.pop();
		if (top.size() >= n)break;
		v.push_back(top + "6");
		v.push_back(top + "8");
		q.push(top + "6");
		q.push(top + "8");
	}
	cout << v.size() << endl;
	reverse(v.begin(), v.end());
	for (string i : v) cout << i << " ";
	cout << endl;
}
int main() {
	int q; cin >> q;
	while (q--) {
		int n; cin >> n;
		init(n);
	}
}
*/
//Bai 11
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<string>
#include<vector>
#include<queue>
#include<map>
using namespace std;
typedef long long ll;
void calc(int k, string s) {
	map<char, ll>mp;
	ll ans = 0;
	for (char x : s) {
		mp[x]++;
	}
	priority_queue<int>q;
	for (auto it : mp) {
		q.push(it.second);
	}
	if (k <= s.size()) {
		while (k--) {
			ll tmp = q.top(); q.pop();
			tmp--;
			q.push(tmp);
		}
	}
	else {
		cout << "0" << endl;
		return;
	}
	while (!q.empty()) {
		ans +=(ll) pow(q.top(), 2);
		q.pop();
	}
	cout << ans << endl;
}
int main() {
	int q; cin >> q;
	while (q--) {
		int k; cin >> k;
		string s; cin >> s;
		calc(k, s);
	}
}
*/
//Bai 12
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<queue>
#include<unordered_set>
using namespace std;
typedef pair<int, int> ii;
void bfs(int s, int t) {
	queue<ii>q;
	unordered_set<int>st;
	q.push({ s,0 });
	st.insert(s);
	while (!q.empty()) {
		ii top = q.front(); q.pop();
		if (top.first == t) cout << top.second << endl;

		if (st.find(top.first * 2)==st.end() && top.first < t) {
			q.push({ top.first * 2, top.second + 1 });
			st.insert(top.first * 2);
		}
		if (st.find(top.first - 1)== st.end() && top.first >= 1) {
			q.push({ top.first - 1,top.second + 1 });
			st.insert(top.first - 1);
		}
	}
}
int main() {
	int q; cin >> q;
	while (q--) {
		int x, y;
		cin >> x >> y;
		bfs(x, y);
	}
}
*/
//Bai 13 
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<queue>
#include<unordered_set>
using namespace std;
typedef long long ll;
typedef pair<ll, ll> ii;
void bfs(ll s) {
	queue<ii>q;
	unordered_set<ll>st;
	q.push({ s,0 });
	st.insert(s);
	while (!q.empty()) {
		ii top = q.front(); q.pop();
		if (top.first == 1) { 
			cout << top.second << endl; 
			break;
		}
		if (top.first - 1 == 1) {
			cout << top.second + 1 << endl;
			break;
		}
		if (st.find(top.first - 1) == st.end() && top.first > 1) {
			q.push({ top.first - 1, top.second + 1 });
			st.insert(top.first - 1);
		}
		for (ll i = 2; i <= sqrt(top.first); i++) {
			if (top.first % i == 0) {
				if (st.find(max((top.first / i), i)) == st.end() && top.first > 1) {
					q.push({ max((top.first / i),i),top.second + 1 });
					st.insert(max((top.first / i), i));
				}
			}
		}
	}
}
int main() {
	int q;
	cin >> q;
	while (q--) {
		ll n; cin >> n;
		bfs(n);
	}
}
*/
//Bai 14
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<queue>
#include<string>
using namespace std;
queue<int>q;
vector<int>v;
bool check(int n) {
	string s = to_string(n);
	for (int i = 0; i < s.size() - 1; i++) {
		for (int j = i + 1; j < s.size(); j++) {
			if (s[i] == s[j])
				return false;
		}
	}
	return true;
}
void init() {
	for (int i = 1; i <= 5; i++) {
		v.push_back(i);
		q.push(i);
	}
	while (true) {
		int tmp = q.front(); q.pop();
		if (tmp > 1e4 + 5) break;
		for (int i = 0; i <= 5; i++) {
			if (check(tmp * 10 + i)) {
				q.push(tmp * 10 + i);
				v.push_back(tmp * 10 + i);
			}
		}
	}
}
int main() {
	//So nguyen duong thi bo 0
	init();
	int q; cin >> q;
	while (q--) {
		int l, r; cin >> l >> r;
		int cnt = 0;
		for (int i : v) {
			if (i >= l && i <= r)
				cnt++;
			else if (i > r) break;
		}
		cout << cnt << endl;
	}
}
*/
//Bai 15
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<queue>
#include<unordered_set>
#include<string>
#include<vector>
using namespace std;
typedef long long ll;
int a[10005]; // a[i] = 0 : la so nt
typedef pair<int, int>ii;
vector<int>adj[10005];
void init() {
	a[0] = a[1] = 1;
	for (int i = 2; i <= 10000; i++) {
		if (a[i] == 0) {
			for (int j = i * i; j <= 10000; j += i) {
				a[j] = 1;
			}
		}
	}
}
bool check(int s, int t) {
	string tmp1 = to_string(s);
	string tmp2 = to_string(t);
	int cnt = 0;
	for (int i = 0; i < tmp1.size(); i++) {
		if (tmp1[i] != tmp2[i])
			cnt++;
	}
	if (cnt == 1)
		return true;
	else
		return false;
}
void find() {
	for (int i = 1001; i <= 9997; i++) {
		for (int j = i + 1; j <= 9997; j++) {
			if (a[i] == 0 && a[j] == 0 && check(i, j)) {
				adj[i].push_back(j);
				adj[j].push_back(i);
			}
		}
	}
}
void bfs(int s, int t) {
	queue<ii>q;
	unordered_set<int>st;
	q.push({ s,0 });
	st.insert(s);
	while (!q.empty()) {
		ii top = q.front(); q.pop();
		if (top.first == t) {
			cout << top.second << endl;
			break;
		}
		else if (check(top.first, t)) {
			cout << top.second + 1 << endl;
			break;
		}
		for (int i : adj[top.first]) {
			if (st.find(i) == st.end()) {
				q.push({ i,top.second + 1 });
				st.insert(i);
			}
		}
	}
}
int main() {
	init();
	find();
	int q; cin >> q;
	while (q--) {
		int s, t; cin >> s >> t;
		bfs(s, t);
	}
}
*/
//Bai 16
/*
#include<iostream>
#include<algorithm>
#include<math.h>
#include<queue>
#include<vector>
#include<string>
#include<set>
using namespace std;
int dx[8] = { -2,-1,1,2,-2,-1,1,2 };
int dy[8] = { -1,-2,-2,-1,1,2,2,1 };
bool check = false;
void bfs(int x,int y, int u, int v) {
	queue<pair<pair<int,int>,int>>q;
	q.push({ { x, y }, 0 });
	set<pair<int,int>>st;
	st.insert({ x,y });
	while (!q.empty()) {
		auto top = q.front(); q.pop();
		int i = top.first.first;
		int j = top.first.second;
		if (i == u && j == v) {
			cout << top.second << endl;
			check = true;
			return;
		}
		for (int k = 0; k < 8; k++) {
			int i1 = i + dx[k];
			int j1 = j + dy[k];
			if (i1 <= 8 && i1 >= 1 && j1 <= 8 && j1 >= 1 && st.find({i1,j1}) == st.end()) {
				q.push({ { i1,j1 }, top.second + 1 });
				st.insert({ i1,j1 });
			}
		}
	}
}
int main() {
	int q; cin >> q;
	while (q--) {
		string a, b; cin >> a >> b;
		check = false;
		int x = a[0] - 'a' + 1;
		int y = a[1] - '0';
		int u = b[0] - 'a' + 1;
		int v = b[1] - '0';
		bfs(x, y, u, v);
		if (check == false) cout << "-1" << endl;
	}
}
*/
//Bai 17
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
#include<vector>
#include<queue>
using namespace std;
int a[1005][1005];
void init(int m, int n) {
	for (int i = 1; i <= m; i++) {
		for (int j = 1; j <= n; j++) {
			cin >> a[i][j];
		}
	}
}
void bfs(int m, int n) {
	queue<pair<pair<int, int>, int>>q;
	set<pair<int, int>>st;
	q.push({ {1,1},0 });
	st.insert({ 1,1 });
	while (!q.empty()) {
		auto top = q.front(); q.pop();
		int i = top.first.first;
		int j = top.first.second;
		if (i == m && j == n) {
			cout << top.second << endl;
			return;
		}
		int i1 = i + a[i][j];
		int j1 = j + a[i][j];
		if (i1 >= 1 && i1 <= m && st.find({i1,j})==st.end()) {
			st.insert({ i1,j });
			q.push({ {i1,j},top.second + 1 });
		}
		if (j1 >= 1 && j1 <= n && st.find({ i,j1 }) == st.end()) {
			st.insert({ i,j1 });
			q.push({ {i,j1},top.second + 1 });
		}
	}
	cout << "-1" << endl;
}
int main() {
	int q; cin >> q;
	while (q--) {
		int m, n;
		cin >> m >> n;
		init(m, n);
		bfs(m, n);
	}
}
*/
//Bai 19
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
#include<vector>
#include<queue>
using namespace std;
typedef long long ll;
ll a[1000005];
int main() {
	int n; cin >> n;
	ll sum = 0;
	priority_queue<ll, vector<ll>, greater<ll>>q;
	for (int i = 0; i < n; i++) {
		int x; cin >> x;
		q.push(x);
	}
	while (q.size() > 1) {
		ll top1 = q.top(); q.pop();
		ll top2 = q.top(); q.pop();
		ll tmp = top1 + top2;
		sum += tmp;
		q.push(tmp);
	}
	cout << sum;
}
*/
//Bai 20
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
#include<vector>
#include<queue>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	priority_queue<ll>q;
	while (n--) {
		int x; cin >> x;
		q.push(x);
	}
	ll res = 0;
	while (q.size() > 1) {
		ll top1 = q.top(); q.pop();
		ll top2 = q.top(); q.pop();
		ll tmp = top1 + top2;
		res += tmp;
		q.push(tmp);
	}
	cout << res << endl;

}
*/
//Bai 21
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
#include<vector>
#include<queue>
using namespace std;
typedef long long ll;
ll MOD = 1e9 + 7;
int main() {
	ll n; cin >> n;
	priority_queue<ll, vector<ll>, greater<ll>>q;
	ll res = 0;
	while (n--) {
		ll x; cin >> x;
		q.push(x);
	}
	while (q.size() > 1) {
		ll top1 = q.top(); q.pop();
		ll top2 = q.top(); q.pop();
		ll tmp = top1 + top2;
		q.push(tmp);
		res += tmp;
		res %= MOD;
	}
	cout << res << endl;
}
*/
