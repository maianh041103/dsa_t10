//Cach tinh so cap tu l -> r la : r - l + 1 
//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	ll n; cin >> n;
	ll* a = new ll[n + 1];
	set<ll>st;
	for (int i = 0; i < n; i++) {
		int x; cin >> x;
		st.insert(x);
	}
	cout << st.size() << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	ll ans = 1;
	for (int i = 1; i < n; i++) {
		if (a[i] != a[i - 1])
			ans++;
	}
	cout << ans << endl;
}
*/
//Bai 9
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int q; cin >> q;
	while (q--) {
		int x; cin >> x;
		if (find(a, a + n, x) != a + n)
			cout << "YES" << endl;
		else cout << "NO" << endl;
	}
}
*/
//Bai 10
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n, x; cin >> n >> x;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	auto it1 = lower_bound(a, a + n, x);
	if (*it1 == x)
		cout << it1 - a << endl;
	else
		cout << "-1" << endl;
	auto it2 = upper_bound(a, a + n, x);
	it2--;
	if (*it2 == x)
		cout << it2 - a << endl;
	else
		cout << "-1" << endl;
	if (it1 != a + n)
		cout << it1 - a << endl;
	else
		cout << "-1" << endl;
	it2++;
	if (it2 != a + n)
		cout << it2 - a << endl;
	else
		cout << "-1" << endl;
	cout << it2  - it1  << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, x; cin >> n >> x;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	int l = 0, r = n - 1, m = (l + r) / 2;
	while (l < r) {
		if (x < a[m]) {
			r = m - 1;
			m = (l + r) / 2;
		}
		else if (x > a[m]) {
			l = m + 1;
			m = (l + r) / 2;
		}
		else {
			cout << m << endl;
			return 0;
		}
	}
	cout << "-1" << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, x; cin >> n >> x;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	int l = 0, r = n - 1, m = (l + r) / 2;
	while (l < r) {
		if (x < a[m]) {
			r = m - 1;
			m = (l + r) / 2;
		}
		else if (x > a[m]) {
			l = m + 1;
			m = (l + r) / 2;
		}
		else {
			while (a[m] == x) {
				m++;
			}
			cout << m - 1 << endl;
			return 0;
		}
	}
	cout << "-1" << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, x; cin >> n >> x;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	int l = 0, r = n - 1, m = (l + r) / 2;
	while (l < r) {
		if (x < a[m]) {
			r = m - 1;
			m = (l + r) / 2;
		}
		else if (x > a[m]) {
			l = m + 1;
			m = (l + r) / 2;
		}
		else {
			while (a[m] == x) {
				m--;
			}
			cout << m + 1;
			return 0;
		}
	}
	cout << "-1" << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, x; cin >> n >> x;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	int l = 0, r = n - 1, m = (l + r) / 2;
	while (l < r) {
		if (x < a[m]) {
			r = m - 1;
			m = (l + r) / 2;
		}
		else if (x > a[m]) {
			l = m + 1;
			m = (l + r) / 2;
		}
		else {
			while (a[m] == x) {
				m++;
			}
			if (m < n) {
				cout << m << endl;
				return 0;
			}
		}
	}
	cout << "-1" << endl;
}
*/
//Bai 1.2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n; cin >> n;
	long long* a = new long long[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	for (int i = 0; i < n; i++) cout << a[i] << " ";
	cout << endl;
	sort(a, a + n, greater<long long >());
	for (int i = 0; i < n; i++) cout << a[i] << " ";
	cout << endl;
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll cmp(ll a, ll b) {
	return abs(a) < abs(b);
}
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	stable_sort(a, a + n, cmp);
	for (int i = 0; i < n; i++)
		cout << a[i] << " ";
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int sum(ll a) {
	int s = 0;
	while (a > 0) {
		s += a % 10;
		a /= 10;
	}
	return s;
}
int cmp(ll a, ll b) {
	if (sum(a) == sum(b))
		return a < b;
	return sum(a) < sum(b);
}
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n, cmp);
	for (int i = 0; i < n; i++) cout << a[i] << " ";
}
*/
//Bai 4
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++)cin >> a[i];
	sort(a, a + n);
	ll ans = 1e9 + 1;
	for (int i = 1; i < n; i++) {
		ll tmp = a[i] - a[i - 1];
		ans = min(ans, tmp);
	}
	cout << ans << endl;
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	map<ll, int>mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	ll ans, cnt = 0;
	for (auto it : mp) {
		if (it.second > cnt) {
			ans = it.first;
			cnt = it.second;
		}
	}
	cout << ans << " " << cnt << endl;
}
*/
//Bai 11
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n, m; cin >> n >> m;
	ll* b = new ll[n + 1];
	ll* c = new ll[m + 1];
	for (int i = 0; i < n; i++)
		cin >> b[i];
	for (int i = 0; i < m; i++) 
		cin >> c[i];
	int cntb = 0, cntc = 0;
	while (cntb < n && cntc < m) {
		if (b[cntb] < c[cntc]) {
			cout << 'b' << cntb + 1 << " ";
			cntb++;
		}
		else if (b[cntb] > c[cntc]) {
			cout << 'c' << cntc + 1 << " ";
			cntc++;
		}
		else {
			cout << 'b' << cntb + 1 << " ";
			cntb++;
		}
	}
	while (cntb < n) {
		cout << 'b' << cntb + 1 << " ";
		cntb++;
	}
	while (cntc < m) {
		cout << 'c' << cntc + 1 << " ";
		cntc++;
	}
}
*/
//Bai 12
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n, m; cin >> n >> m;
	int* a = new int[n + 1];
	int* b = new int[m + 1];
	for (int i = 0; i < n; i++) 
		cin >> a[i];
	for (int i = 0; i < m; i++)
		cin >> b[i];
	sort(a, a + n);
	sort(b, b + m);
	int cnt1 = 0, cnt2 = 0;
	int ans = 0;
	while (cnt1 < n && cnt2 < m) {
		if (a[cnt1] > b[cnt2]) {
			ans++;
			cnt1++;
			cnt2++;
		}
		else {
			cnt1++;
		}
	}
	cout << ans << endl;
}
*/
//Bai 13 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	sort(a, a + n);
	int ans = 0;
	for (int i = 0; i < n; i++) {
		if (a[i] >= ans) {
			ans++;
		}
	}
	cout << ans << endl;
}
*/
//Bai 14
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++)cin >> a[i];
	sort(a, a + n, greater<int>());
	ll res = 0;
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		if (a[i] - cnt > 0) {
			res += a[i] - cnt;
			cnt++;
		}
		else
			break;
	}
	cout << res << endl;
}
*/
//Bai 15
/*
#include<iostream>
#include<algorithm>
#include<math.h>
using namespace std;
typedef long long ll;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	int ans = 1;
	for (int i = 1; i < n; i++) {
		if (a[i] - a[i - 1] > k)
			ans++;
	}
	cout << ans << endl;
}
*/
//Bai 16 **

//Bai 20
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
int main() {
	int n; cin >> n;
	set<int>s;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		s.insert(a[i]);
	}
	int tmp = *max_element(a, a + n) - *min_element(a, a + n) + 1;
	cout << tmp - s.size();
}
*/
//Bai 21
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n + 1];
	set<int> s;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		while (a[i] > 0) {
			s.insert(a[i] % 10);
			a[i] /= 10;
		}
	}
	for (auto it : s) {
		cout << it << " ";
	}
}
*/
//Bai 23**
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
ll cmp1(pair<ll, ll>a, pair<ll, ll>b) {
	if (a.second == b.second)
		return a.first < b.first;
	return a.second > b.second;
}
ll cmp2(pair<ll, ll>a, pair<ll, ll>b) {
	return a.second > b.second;
}
ll b[1000000] = { 0 };
pair<ll, ll>p[100000];
int main() {
	ll n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		b[a[i]]++;
	}
	int cnt = 0;
	for (ll i = 0; i < n; i++) {
		if (b[a[i]] > 0) {
			p[cnt].first = a[i];
			p[cnt].second = b[a[i]];
			b[a[i]] = 0;
			cnt++;
		}
	}
	ll* res = new ll[n + 1];
	ll l = 0;
	stable_sort(p, p + cnt, cmp2);
	for (ll i = 0; i < cnt; i++) {
		ll dem = p[i].second;
		while ( dem > 0 ) {
			res[l] = p[i].first;
			dem--;
			l++;
		}
	}
	sort(p, p + cnt, cmp1);
	for (ll i = 0; i < cnt; i++) {
		while (p[i].second > 0) {
			cout << p[i].first << " ";
			p[i].second--;
		}
	}
	cout << endl;
	for (int i = 0; i < n; i++)
		cout << res[i] << " ";
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int cnt[1000001];
bool cmp(int a, int b) {
	if (cnt[a] == cnt[b])
		return a < b;
	return cnt[a] > cnt[b];
}
bool cmp2(int a, int b) {
	return cnt[a] > cnt[b];
}
int main() {
	int n; cin >> n;
	int* a = new int[n];
	int* b = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		b[i] = a[i];
		cnt[a[i]]++;
	}
	sort(a, a + n, cmp);
	for (int i = 0; i < n; i++)
		cout << a[i] << " ";
	cout << endl;
	stable_sort(b, b + n, cmp2);
	for (int i = 0; i < n; i++) {
		while (cnt[b[i]] > 0) {
			cout << b[i] << " ";
			cnt[b[i]]--;
		}
	}
	cout << endl;
}
*/
//Bai 24
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	long long sum = a[0];// so dau luon + nen k duoc doi cho
	sort(a + 1, a + n, greater<int>());
	for (int i = 1; i < n; i++) {
		if (i <= k) {
			sum += a[i];
		}
		else
			sum -= a[i];
	}
	cout << sum << endl;
}
*/
//Bai 25
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
using namespace std;
int cmp(pair<int, int>a, pair<int, int>b) {
	return a.first < b.first;
}
int main() {
	int n; cin >> n;
	vector<pair<int, int>>v;
	for (int i = 0; i < n; i++) {
		int x, y;
		cin >> x >> y;
		v.push_back({ x,y });
	}
	sort(v.begin(), v.end(), cmp);
	long long sum = v[0].first + v[0].second;
	for (int i = 1; i < v.size(); i++) {
		if (sum < v[i].first) {
			sum = v[i].first + v[i].second;
		}
		else
			sum += v[i].second;
	}
	cout << sum << endl;
}
*/
//Bai 26
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	vector<int>v;
	int cnt = 0;
	while (n--) {
		int x;
		cin >> x;
		if (x == 0)
			cnt++;
		else
			v.push_back(x);
	}
	for (int i = 0; i < cnt; i++) {
		v.push_back(0);
	}
	for (int i : v)
		cout << i << " ";
}
*/
//Bai 6 *

#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
#include<string>
using namespace std;
typedef long long ll;
vector<string>v;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	int cnt = 0;
	for (int i = 0; i < n; i++)cin >> a[i];
	for (int i = 0; i < n - 1; i++) {
		int min_idx = i;
		for (int j = i + 1; j < n; j++) {
			if (a[j] < a[min_idx]) {
				min_idx = j;
			}
		}
		swap(a[min_idx], a[i]);
		string s = "Buoc " + to_string(cnt + 1) + " : ";
		for (int i = 0; i < n; i++) {
			s += to_string(a[i]) + " ";
		}
		v.push_back(s);
		cnt++;
	}
	reverse(v.begin(), v.end());
	for (string s : v) cout << s << endl;
}

//Bai 7 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	int dem = 1;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 1; i < n; i++) {
		int key = a[i];
		int j = i - 1;
		while (j >= 0 && a[j] > key) {
			a[j + 1] = a[j];
			j--;
		}
		a[j + 1] = key;
		cout << "Buoc " << i << ": ";
		for (int k = 0; k < n; k++)
			cout << a[k] << " ";
		cout << endl;
	}
}
*/
//Bai 8 *
/*
#include<iostream>
#include<algorithm>
#include<math.h>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++)cin >> a[i];
	for (int i = 0; i < n - 1; i++) {;
		for (int j = 0; j < n - i - 1; j++) {
			if (a[j] > a[j + 1]) {
				swap(a[j], a[j + 1]);
			}
		}
		cout << "Buoc " << i + 1 << ": ";
		for (int i = 0; i < n; i++)
			cout << a[i] << " ";
		cout << endl;
	}
}
*/
//Bai 17
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	ll sum = 0;
	map<int, int>mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	for (int i = 0; i < n; i++) {
		if (a[i] * 2 != k) {
			if (mp[a[i]] > 0) {
				sum += mp[a[i]] * mp[k - a[i]];
				mp[a[i]] = 0;
			}
		}
		else {
			sum += mp[a[i]] * (mp[a[i]] - 1) / 2;
			mp[a[i]] = 0;
		}
	}
	cout << sum << endl;
}
*/
//Bai 18 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int last(int a[], int l, int r, int x) {
	int res = -1;
	while (l <= r) {
		int m = (l + r) / 2;
		if (a[m] < x) {
			res = m;
			l = m + 1;
		}
		else
			r = m - 1;
	}
	return res;
}
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) 
		cin >> a[i];
	sort(a, a + n);
	ll ans = 0;
	for (int i = 0; i < n; i++) {
		int tmp = last(a, i + 1, n - 1, k - a[i]);
		if (tmp != -1) {
			ans += tmp - (i + 1) + 1;
		}
	}
	cout << ans << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	ll ans = 0;
	sort(a, a + n);
	for (int i = 0; i < n; i++) {
		auto it = lower_bound(a + i + 1, a + n, k - a[i]);
		// chi so so >= k - a[i]
		it--;
		ans += it - a - (i + 1) + 1;
	}
	cout << ans << endl;
}
*/
//Bai 19
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int first(int a[], int l, int r, int x) {
	int res = -1;
	while (l <= r) {
		int m = (l + r) / 2;
		if (a[m] > x) {
			res = m;
			r = m - 1;
		}
		else
			l = m + 1;
	}
	return res;
}
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a, a + n);
	ll ans = 0;
	for (int i = 0; i < n; i++) {
		int r = first(a, i + 1, n - 1, k - a[i]);
		if (r != -1) {
			ans += n - 1 - r + 1;
		}
	}
	cout << ans << endl;
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	sort(a,a+n);
	ll ans = 0;
	for (int i = 0; i < n; i++) {
		auto it = upper_bound(a + i + 1, a + n, k - a[i]);
		ans += (a + n) - it;
	}
	cout << ans << endl;
}
*/
//Bai 26
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	for (int i = 0; i < n; i++) {
		if (a[i] * 2 != k) {
			if (find(a, a + n, k + a[i]) != a + n || find(a, a + n, a[i] - k) != a + n) {
				cout << "1" << endl;
				return 0;
			}
		}
	}
	cout << "-1" << endl;
}
*/
//Bai 27
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n + 1];
	int* b = new int[n + 1];
	for (int i = 0; i < n; i++) { 
		cin >> a[i];
		b[i] = a[i];
	}
	sort(b, b + n);
	for (int i = 0; i < n; i++) {
		auto pos = upper_bound(b, b + n, a[i]);
		if (pos != b + n)
			cout << *pos << " ";
		else
			cout << "_ ";
	}
}
*/
//Bai 30
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<iomanip>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll l; cin >> l;
	ll* a = new ll[n];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	double res = 2 * a[0];
	for (int i = 1; i < n; i++) {
		double sub = a[i] - a[i - 1];
		res = max(res, sub);
	}
	res = max(res, 2 *double(l - a[n - 1]));
	if (res == a[0] || res == l - a[n - 1])
		cout << setprecision(10) << fixed << res << endl;
	else
		cout << setprecision(10) << fixed << double(res * 1.0 / 2 * 1.0);
}
*/
//Bai 31 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
typedef long long ll;
using namespace std;
int cmp(pair<int, int>a, pair<int, int>b) {
	return a.first < b.first;
}
int main() {
	ll n, s;
	cin >> n >> s;
	vector<pair<int, int>>v;
	while (n--) {
		int x, y; cin >> x >> y;
		v.push_back({ x,y });
	}
	sort(v.begin(), v.end(), cmp);
	for (int i = 0; i < v.size(); i++) {
		if (s > v[i].first) {
			s += v[i].second;
		}
		else {
			cout << "NO" << endl;
			return 0;
		}
	}
	cout << "YES" << endl;
}
*/
//Bai 33
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n];
	set<ll>st;
	while (n--) {
		ll x; cin >> x;
		st.insert(x);
	}
	cout << st.size();
}
*/
//Bai 34
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, m, k; cin >> n >> m >> k;
	int* a = new int[n];
	for (int i = 0; i < n; i++) cin >> a[i];
	int* b = new int[m];
	for (int i = 0; i < m; i++) cin >> b[i];
	sort(a, a + n);
	sort(b, b + m);
	int i = 0, j = 0;
	ll ans = 0;
	while (i < n && j < m) {
		if (a[i] - k > b[j])
			j++;
		else if (a[i] + k < b[j])
			i++;
		else {
			i++;
			j++;
			ans++;
		}
	}
	cout << ans << endl;
}
*/
//Bai 35
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n, x;
	cin >> n >> x;
	ll* a = new ll[n];
	for (int i = 0; i < n; i++) cin >> a[i];
	int i = 0, j = n - 1;
	ll ans = 0;
	sort(a, a + n);
	while (i <= j) {
		if (a[i] + a[j] > x) {
			j--;
			ans++;
		}
		else {
			i++;
			j--;
			ans++;
		}
	}
	cout << ans << endl;
}
*/
//Bai 36 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	int n, m; cin >> n >> m;
	multiset<ll>st;
	ll* a = new ll[m];
	for (int i = 0; i < n; i++) {
		ll x; cin >> x;
		st.insert(x);
	}
	for (int i = 0; i < m; i++) {
		cin >> a[i];
		auto it = st.upper_bound(a[i]); // phan tu nho nhat lon hon x
		if (it == st.begin()) // truoc do k co phan tu nao nho hon hoac bang x
			cout << "-1" << endl;
		else {
			it--;
			cout << *it << endl;
			st.erase(it);
		}
	}
}
*/
//Bai 37 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
int cmp(pair<ll, ll>a, pair<ll, ll>b) {
	return a.first < b.first;
}
int main() {
	int n; cin >> n;
	vector<pair<ll, ll>>v;
	for (int i = 0; i < n; i++) {
		ll x, y; cin >> x >> y;
		v.push_back({ x,1 });
		v.push_back({ y,-1 });
		// nguoi vao + 1
		//nguoi ra -1
	}
	sort(v.begin(), v.end(), cmp);
	ll ans = 0, res = 0;
	for (auto it : v) {
		ans += it.second;
		res = max(res, ans);
	}
	cout << res << endl;
}
*/
//Bai 38
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll cmp(pair < ll, ll>a, pair<ll, ll>b) {
	if (a.second == b.second)
		return a.first < b.first;
	return a.second < b.second;
}
int main() {
	int n; cin >> n;
	vector<pair<ll, ll>>v;
	for (int i = 0; i < n; i++) {
		ll x, y; cin >> x >> y;
		v.push_back({ x, y });
	}
	sort(v.begin(), v.end(), cmp);
	ll ans = 1;
	ll tmp = v[0].second;
	for (int i = 1; i < n; i++) {
		if (v[i].first >= tmp) {
			tmp = v[i].second;
			ans++;
		}
	}
	cout << ans << endl;
}
*/
//Bai 39 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) cin >> a[i];
	ll res = 1;
	sort(a, a + n);
	for (int i = 0; i < n; i++) {
		if (a[i] > res) { 
			cout << res << endl;
			return 0;
		}
		else
			res += a[i]; 
	}
	cout << res << endl;
}
*/
//Bai 40 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	vector<pair<int, int>>v;
	for (int i = 0; i < n; i++) {
		int x; cin >> x;
		v.push_back({ x,i });
	}
	sort(v.begin(), v.end());
	ll ans = 1;
	for (int i = 1; i < v.size(); i++) {
		if (v[i].second < v[i - 1].second)
			ans++;
	}
	cout << ans << endl;
}
*/
//Bai 41
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int n; cin >> n;
	ll k; cin >> k;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	ll ans = 0;
	ll sum = 0;
	int l = 0;
	for (int i = 0; i < n; i++) {
		sum += a[i];
		if (sum > k) {
			while (sum > k) {
				sum -= a[l];
				l++;
			}
		}
		if (sum == k)
			ans++;
	}
	cout << ans << endl;
}
*/
//Bai 42 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n + 1];
	map<ll, ll>mp;
	ll ans = 0, sum = 0;
	mp[0] = 1;
	for (ll i = 0; i < n; i++) {
		cin >> a[i];
		sum += a[i];
		ans += mp[sum - k];
		mp[sum]++;
		// Do sum co the bi lap lai
	}
	cout << ans << endl;
}
*/
//Bai 43 **
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	ll n; cin >> n;
	ll* a = new ll[n];
	ll ans = 0;
	map<ll, ll>mp;
	ll sum = 0;
	mp[0] = 1;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		sum += a[i];
		ans += mp[(sum % n + n) % n];
		// Lay tong hien tai tru cho cac tong phia truoc. n lan sum ghep duoc n - 1 cap
		mp[(sum % n + n) % n]++;//sum % n
		//(-2 % 5 + 5)% 5 = 3  
	}
	cout << ans << endl;
}
*/
//Bai 44 *
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
typedef long long ll;
using namespace std;
int main() {
	ll n, k; cin >> n >> k;
	ll ans = 0, l = 0;
	ll* a = new ll[n];
	map<ll, ll>mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for (int i = 0; i < n; i++) {
		mp[a[i]]++;
		while (mp.size() > k && l < n) {
			mp[a[l]]--;
			if (mp[a[l]] == 0) {
				auto it = mp.find(a[l]);
				mp.erase(it);
			}
			l++;
		}
		ans += i - l + 1;
	}
	cout << ans << endl;
}
*/
//Bai 45
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	ll n; cin >> n;
	ll* a = new ll[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	map<ll, ll>mp;
	ll ans = 0, l = 0;
	for (ll i = 0; i < n; i++) {
		mp[a[i]]++;
		if (mp[a[i]] > 1) {
			while (mp[a[i]] > 1) {
				mp[a[l]]--;
				l++;
			}
		}
		ans = max(ans, i - l + 1);
	}
	cout << ans << endl;
}
*/
//Bai 46
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<numeric>
using namespace std;
typedef long long ll; 
ll k; // So mang con de yeu cau
ll a[1000001];
int n;
bool check(ll res) {
	//res : tong lon nhat trong cac mang con => chia duoc bao nhieu mang <=k thi ok
	int cnt = 0; ll sum = 0;
	for (int i = 0; i < n; i++) {
		sum += a[i];
		if (sum > res) {
			sum = a[i];
			cnt++;
		}
	}
	cnt++;// tinh nhom cuoi cung
	return cnt <= k; // tong so mang nho hon k
}
int main() {
	cin >> n >> k;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	ll l = *max_element(a, a + n);
	ll r = accumulate(a, a + n, 0ll);
	ll res = 0;
	while (l <= r) {
		ll m = (l + r) / 2;
		if (check(m)) {
			//Tang so day , giam tong
			res = m;
			r = m - 1;
		}
		else
			l = m + 1;
	}
	cout << res;
}
*/
//Bai 47
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int n, p, a[1000001];
bool check(ll time) {
	ll cnt = 0;
	for (int i = 0; i < n; i++) {
		cnt += time / a[i];
	}
	return cnt >= p;
}
int main() {
	cin >> n >> p;
	for (int i = 0; i < n; i++) cin >> a[i];
	ll l = 0;
	ll r = 1ll * p * (*min_element(a, a + n));
	ll res;
	while (l <= r) {
		ll m = (l + r) / 2;
		if (check(m)) {
			res = m;
			r = m - 1;
		}
		else {
			l = m + 1;
		}
	}
	cout << res << endl;
}
*/
//Bai 48
/*
#include<iostream>
#include<algorithm>
#include<math.h>
using namespace std;
typedef long long ll;
int main() {
	ll a, b, n;
	cin >> a >> b >> n;
	ll l = 0, r = max(a * n, b * n);
	ll ans = 0;
	while (l <= r) {
		ll mid = (l + r) / 2;
		if ((mid / a) * (mid / b) >= n) {
			r = mid - 1;
			ans = mid;
		}
		else {
			l = mid + 1;
		}
	}
	cout << ans << endl;
}
*/
//Bai 49
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<iomanip>
using namespace std;
typedef long long ll;
ll a[100000];
ll k, n;
bool check(double res) {
	ll ans = 0;
	for (int i = 0; i < n; i++) {
		ans += (ll)(a[i] / res);
	}
	return ans >= k;
}
int main() {
	cin >> n >> k;
	for (ll i = 0; i < n; i++)
		cin >> a[i];
	double l = 0, r = 1e18;
	for (int i = 0; i < 120 ; i++) {
		double m = (l + r) / 2;
		if (check(m)) {
			l = m;
		}
		else
			r = m ;
	}
	cout << setprecision(6) << fixed << l << endl;
}
*/
//Bai 50
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll n, x, y;
bool check(ll t) {
	ll sub = t - min(x, y);
	ll ans = sub / x + sub / y;
	return ans >= n - 1;
}
int main() {
	cin >> n >> x >> y;
	ll l = 0;
	ll r = x * n;
	ll res;
	while (l <= r) {
		ll m = (l + r) / 2;
		if (check(m)) {
			r = m - 1;
			res = m;
		}
		else {
			l = m + 1;
		}
	}
	cout << res << endl;
}
*/
//Bai them
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll cd, n, a[1000001];
bool check(ll h) {
	ll sum = 0;
	for (int i = 0; i < n; i++) {
		if (a[i] > h) {
			sum += a[i] - h;
		}
	}
	return sum >= cd;
}
int main() {
	cin >> n >> cd;
	for (int i = 0; i < n; i++) cin >> a[i];
	ll l = 0;
	ll r = *max_element(a, a + n);
	ll res;
	while (l <= r) {
		ll m = (l + r) / 2;
		if (check(m)) {
			res = m;
			l = m + 1;
		}
		else {
			r = m - 1;
		}
	}
	cout << res << endl;
}
*/
//Bai 1
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
ll* pos = new ll[10000000];
int main() {
	ll n; cin >> n;
	ll* a = new ll[n];
	for (int i = 0; i < n; i++)cin >> a[i];
	sort(a, a + n);
	ll ans = 0, res = 1e18;
	int cnt = 0;
	for (int i = 1; i < n; i++) {
		ans = abs(a[i] - a[i - 1]);
		if (res > ans) {
			cnt = 0;
			res = ans;
			for (int i = 0; i < 10000000; i++)
				pos[i] = 0;
			pos[0] = i;
		}
		else if (res == ans) {
			cnt++;
			pos[cnt] = i;
		}
	}
	for (int i = 0; i < 10000000; i++) {
		if (pos[i] > 0) {
			cout << a[pos[i] - 1] << " " << a[pos[i]] << " ";
		}
	}
}
*/
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n; cin >> n;
	ll* a = new ll[n];
	for (int i = 0; i < n; i++)cin >> a[i];
	sort(a, a + n);
	ll ans = 0, res = 1e18;
	for (int i = 1; i < n; i++) {
		ans = abs(a[i] - a[i - 1]);
		if (res > ans) {
			res = ans;
		}
	}
	for (int i = 1; i < n; i++) {
		ans = abs(a[i] - a[i - 1]);
		if (ans == res)
			cout << a[i - 1] << " " << a[i] << " ";
	}
}
*/
//Bai 2
/*
#include<iostream>
#include<algorithm>
#include<math.h>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	for (int i = 0; i < n; i++)
		cout << a[i] << " ";
}
*/
//Bai 4
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n];
	map<int, int>mp1;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp1[a[i]]++;
	}
	int m; cin >> m;
	int* b = new int[m];
	map<int, int>mp2;
	for (int i = 0; i < m; i++) {
		cin >> b[i];
		mp2[b[i]]++;
	}
	for (auto it : mp2) {
		auto tmp = mp1.count(it.first);
		if (tmp == 0) {
			cout << it.first << " ";
		}
		else {
			if (it.second - mp1[it.first] > 0)
				cout << it.first << " ";
		}
	}
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
map < ll, ll>mp;
int main() {
	ll n, k; cin >> n >> k;
	ll* a = new ll[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	sort(a, a + n);
	ll ans = 0;
	for (int i = 0; i < n - 1; i++) {
		if (binary_search(a + i + 1, a + n, a[i] + k)) {
			auto it1 = upper_bound(a + i + 1, a + n, a[i] + k);
			auto it2 = lower_bound(a + i + 1, a + n, a[i] + k);
			ans += it1 - it2;
		}
	}
	cout << ans << endl;
*/
//Bai 6
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	ll n; cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 1; i <= n; i++) cin >> a[i];
	ll q; cin >> q;
	while (q--) {
		ll x; cin >> x;
		auto it = lower_bound(a, a + n + 1, x);
		if (binary_search(a, a + n + 1, x)) {
			cout << "Yes " << it - a << endl;
		}
		else
			cout << "No " << it - a << endl;
	}
}
*/
