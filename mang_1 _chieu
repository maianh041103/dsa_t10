//Bai 1
/*
#include<iostream>
#include<math.h>
using namespace std;
typedef long long ll;
int main() {
	int c = 0, l = 0;
	ll sumc = 0, suml = 0;
	int n; cin >> n;
	while (n--) {
		int x;
		cin >> x;
		if (x % 2 == 0) {
			c++;
			sumc += x;
		}
		else {
			l++;
			suml += x;
		}
	}
	cout << c << endl;
	cout << l << endl;
	cout << sumc << endl;
	cout << suml << endl;
}
*/
//Bai 2
/*
#include<iostream>
#include<math.h>
#include<iomanip>
using namespace std;
typedef long long ll;
int nt(int n) {
	for (int i = 2; i <= sqrt(n); i++) {
		if (n % i == 0)
			return 0;
	}
	return n > 1;
}
int main() {
	int n;
	cin >> n;
	ll sum = 0;
	int cnt = 0;
	while (n--) {
		int x; cin >> x;
		if (nt(x)) {
			sum += x;
			cnt++;
		}
	}
	cout << setprecision(3) << fixed << (double)sum * 1.0 / (cnt * 1.0) << endl;
}
*/
//Bai 3
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
typedef long long ll;
int main() {
	int n;
	cin >> n;
	map<int, int>mp;
	while (n--) {
		int x;
		cin >> x;
		mp[x]++;
	}
	for (auto it : mp) {
		cout << it.second << endl;
		break;
	}
}
*/
//Bai 4
/*
#include<iostream>
#include<math.h>
using namespace std;
int main() {
	int n; cin >> n;
	int *a=new int[10001];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int k; cin >> k;
	int l = 0;
	int m = 0;
	for (int i = 0; i < n; i++) {
		if (a[i] > k)l++;
		else if (a[i] < k)
			m++;
	}
	cout << m << endl;
	cout << l << endl;
}
*/
//Bai 5
/*
#include<iostream>
#include<math.h>
using namespace std;
int main() {
	int n; cin >> n;
	int ok = 0;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		if (i % 2 == 0 && a[i] % 2 == 0)
		{
			cout << a[i] << " ";
			ok = 1;
		}
	}
	if (ok == 0)
		cout << "NONE" << endl;
}
*/
//Bai 6
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n; cin >> n;
	map<int, int>mp;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	int k; cin >> k;
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		if (a[i] * 2 == k)
			cnt += mp[k - a[i]] - 1;//tinh ca chinh no 
		else
			cnt += mp[k - a[i]];
	}
	cout << cnt / 2;
}
*/
//Bai 7
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	sort(a, a + n);
	int mi = a[1] - a[0];
	for (int i = 1; i < n; i++) {
		int x = a[i] - a[i - 1];
		mi = min(x, mi);
	}
	cout << mi << endl;
}
*/
//Bai 8
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n + 1];
	map<int, int>mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	for (int i = 0; i < n; i++) {
		if (mp[a[i]] != 0) {
			cout << a[i] << " ";
			mp[a[i]] = 0;
		}
	}
}
*/
//Bai 9 
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n + 1];
	map<int, int>mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	for (int i = 0; i < n; i++) {
		if (mp[a[i]] != 0) {
			cout << a[i] << " " << mp[a[i]] << endl;
			mp[a[i]] = 0;
		}
	}
}
*/
//Bai 10
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
typedef long long ll;
const ll maxn = 1000001;
ll prime[maxn];
void sang() {
	for (int i = 0; i < maxn; i++) {
		prime[i] = 1;
	}
	prime[0] = prime[1] = 0;
	for (int i = 2; i <= sqrt(maxn); i++) {
		if (prime[i] == 1) {
			for (int j = i * i; j < maxn; j += i) {
				prime[j] = 0;
			}
		}
	}
}
int main() {
	sang();
	int n; cin >> n;
	ll suml = 0;
	ll sumr = 0;
	ll sum = 0;
	int* a = new int[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		sum += a[i];
	}
	for (int i = 0; i < n; i++) {
		suml += a[i];
		if (prime[suml - a[i]] == 1) {
			if (prime[sum - suml] == 1)
				cout << i << " ";
		}
	}
}
*/
//Bai 11
/*
#include<iostream>
#include<math.h>
using namespace std;
typedef long long ll;
ll fibo[94];
void fb() {
	fibo[0] = 0;
	fibo[1] = 1;
	for (int i = 2; i < 93; i++) {
		fibo[i] = fibo[i - 1] + fibo[i - 2];
	}
}
int main() {
	fb();
	int n;
	cin >> n;
	ll* a = new ll[n + 1];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int ok = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 93; j++) {
			if (a[i] == fibo[j])
			{
				cout << a[i] << " ";
				ok = 1;
				break;
			}
		}
	}
	if (ok == 0)
		cout << "NONE" << endl;
}
*/
//Bai 12
/*
#include<iostream>
#include<math.h>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int imin = 0;
	int jmax = 0;
	int amin = a[0];
	int amax = a[0];
	for (int i = 0; i < n; i++) {
		if (amin >= a[i]) {
			amin = a[i];
			imin = i;
		}
		if (amax < a[i]) {
			amax = a[i];
			jmax = i;
		}
	}
	cout << imin << " " << jmax << endl;
}
*/
//Bai 13
/*
#include<iostream>
#include<math.h>
using namespace std;
typedef long long ll;
int main() {
	ll max = 1e9 + 7;
	int n; cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	ll sum = 0;
	ll t = 1;
	for (int i = 0; i < n; i++) {
		sum += a[i];
		sum = sum % max;
		t *= a[i];
		t %= max;
	}
	cout << sum << endl;
	cout << t << endl;
}
*/
//Bai 14
/*
#include<iostream>
#include<math.h>
using namespace std;
int gcd(int a, int b) {
	if (b == 0)return a;
	else
		return gcd(b, a % b);
}
int main() {
	int n; cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int res = gcd(a[0], a[1]);
	for (int i = 2; i < n; i++) {
		res = gcd(res, a[i]);
		if (res == 1)
			break;
	}
	cout << res << endl;
}
*/
//Bai 15
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	sort(a, a + n);
	if (a[n - 1] == a[0])
		cout << a[n - 1] << " " << a[n - 2] << endl;
	else {
		for (int i = n - 1; i >= 0; i--) {
			if (a[i] < a[n - 1])
			{
				cout << a[n - 1] << " " << a[i] << endl;
				break;
			}
		}
	}
}
*/
//Bai 16
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int prime[10001];
void sang() {
	for (int i = 0; i < 10001; i++) {
		prime[i] = 1;
	}
	prime[0] = prime[1] = 0;
	for (int i = 2; i <= sqrt(10001); i++) {
		if (prime[i] == 1) {
			for (int j = i * i; j < 10001; j += i) {
				prime[j] = 0;
			}
		}
	}
}
int tn(int n) {
	int a[6];
	int cnt = 0;
	while (n != 0) {
		a[cnt] = n % 10;
		cnt++;
		n /= 10;
	}
	for (int i = 0; i < cnt; i++) {
		if (a[i] != a[cnt - 1 - i])
			return 0;
	}
	return 1;
}
int c[10001];
void cp() {
	for (int i = 0; i < sqrt(10001); i++) {
		c[i * i] = i * i;
	}
}
int tong(int n) {
	int sum = 0;
	while (n != 0) {
		sum += n % 10;
		n /= 10;
	}
	sang();
	if (prime[sum] == 1)
		return 1;
	else
		return 0;
}
int main() {
	int n; cin >> n;
	sang();
	cp();
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int y1 = 0, y2 = 0, y3 = 0, y4 = 0;
	for (int i = 0; i < n; i++) {
		if (a[i] == 0) {
			y2++;
			y3++;
		}
		else {
			if (prime[a[i]] == 1)
				y1++;
			if (tn(a[i]))
				y2++;
			if (c[a[i]] != 0)
				y3++;
			if (tong(a[i]))
				y4++;
		}	
	}
	cout << y1 << endl << y2 << endl << y3 << endl << y4 << endl;
}
*/
//Bai 17
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int check() {
	int n;
	cin >> n;
	int* a = new int[n];
	int* b = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		b[i] = a[i];
	}
	reverse(a, a + n);
	for (int i = 0; i < n; i++) {
		if (a[i] != b[i])
			return 0;
	}
	return 1;
}
int main() {
	if (check())
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
}
*/
//Bai 18
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n];
	int* b = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		b[i] = a[i];
		a[i] %= 10000;
	}
	if (a[0] * a[1] < 0)
		cout << b[0] << " ";
	for (int i = 1; i < n - 1; i++) {
		if (a[i] * a[i - 1] < 0 || a[i] * a[i + 1] < 0)
			cout << b[i] << " ";
	}
	if (a[n - 1] * a[n - 2] < 0)
		cout << b[n - 1] << " ";
}
*/
//Bai 19
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	reverse(a, a + n);
	for (int i = 0; i < n; i++)
		cout << a[i] << " ";
}
*/
//Bai 20
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for (int i = 1; i < n - 1; i++) {
		if (a[i] > a[i - 1] && a[i] > a[i + 1])
			cout << a[i] << " ";
	}
}
*/
//Bai 21
/*
#include<iostream>
#include<math.h>
#include<vector>
using namespace std;
int main() {
	int n;
	cin >> n;
	vector<int>v;
	int x, k;
	cin >> x >> k;
	while (n--) {
		int m;
		cin >> m;
		v.push_back(m);
	}
	v.insert(v.begin() + k - 1, x);
	for (int a : v)
		cout << a << " ";
}
*/
//Bai 22
/*
#include<iostream>
#include<math.h>
#include<vector>
using namespace std;
int main() {
	int n, k;
	cin >> n >> k;
	vector<int>v;
	while (n--) {
		int x;
		cin >> x;
		v.push_back(x);
	}
	int ok = 0;
	for (int i = 0; i < v.size(); i++) {
		if (v[i] == k) {
			v.erase(v.begin() + i , v.begin() + i + 1);
			ok = 1;
			break;
		}
	}
	if (ok == 0)
		cout << "NOT FOUND" << endl;
	else {
		for (int x : v)
			cout << x << " ";
	}
}
*/
//Bai 23
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int* f = new int[n];
	f[0] = a[0];
	for (int i = 1; i < n; i++) {
		f[i] = f[i - 1] + a[i];
	}
	for (int i = 0; i < n; i++)
		cout << f[i] << " ";
}
*/
//Bai 24
/*
#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
int main() {
	int n, k; cin >> n >> k;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	int sum = 0;
	for (int i = 0; i < k; i++) {
		sum += a[i];
	}
	cout << sum << " ";
	for (int i = k; i < n; i++) {
		sum = sum + a[i] - a[i - k];
		cout << sum << " ";
	}
}
*/
//Bai 26
/*
#include<iostream>
#include<math.h>
#include<set>
using namespace std;
int main() {
	int n;
	cin >> n;
	set<int>s;
	while (n--) {
		int x;
		cin >> x;
		s.insert(x);
	}
	cout << s.size();
}
*/
//Bai 27
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n; cin >> n;
	map<int, int>mp;
	while (n--) {
		int x;
		cin >> x;
		mp[x]++;
	}
	for (auto it : mp) {
		cout << it.first << " " << it.second << endl;
	}
}
*/
//Bai 28
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n;
	cin >> n;
	map<int, int>mp;
	int* a = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	for (int i = 0; i < n; i++) {
		if (mp[a[i]] != 0) {
			cout << a[i] << " " << mp[a[i]] << endl;
			mp[a[i]] = 0;
		}
	}
}
*/
//Bai 29
/*
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n; cin >> n;
	map<int, int>mp;
	while (n--) {
		int x;
		cin >> x;
		mp[x]++;
	}
	int max = 0;
	int imax = 0;
	for (auto it : mp) {
		if (imax < it.second) {
			imax = it.second;
			max = it.first;
		}
	}
	cout << max << " " << imax << endl;
}
*/
//Bai 30
#include<iostream>
#include<math.h>
#include<map>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n];
	map<int, int>mp;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		mp[a[i]]++;
	}
	int max = 0;
	int imax = 0;
	for (int i = 0; i < n; i++) {
		if (mp[a[i]] > imax) {
			imax = mp[a[i]];
			max = a[i];
		}
	}
	cout << max << " " << imax << endl;
}
